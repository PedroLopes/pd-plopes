#N canvas 313 29 1440 852 10;
#X declare -lib iemlib;
#X obj 20 203 list split 1;
#X obj 20 148 until;
#X obj 20 176 list append;
#X obj 150 203 bang;
#X text 102 115 First store list \, then start the loop;
#X text 119 143 "until" bangs its output until told to stop by a "bang"
to its right inlet.;
#X text 138 175 Store the remaining list.;
#X text 195 202 third outlet of "split" tells us to stop.;
#X text 68 234 Second outlet of "split" becomes the new list for "list
append" above.;
#X obj 46 17 inlet;
#X text 89 16 list as in input here;
#X text 103 96 This is essentially a copy of lists help.;
#X obj 24 534 outlet;
#X text 91 539 Each element will come out here as output \, one by
one.;
#X obj 274 46 import iemlib;
#X text 366 45 using prepend from iemlib;
#X obj 45 44 iem_prepend 1;
#X text 108 346 We must throw away the first item \, which we only
put in there (the "1") to make sure the list is a list even if it starts
with a "string" like element.;
#X obj 43 352 counter;
#X obj 41 398 moses 1;
#X obj 47 115 t b l b;
#X obj 39 505 spigot;
#X obj 72 484 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 79 434 1;
#X msg 39 434 0;
#X connect 0 0 21 0;
#X connect 0 1 2 1;
#X connect 0 2 3 0;
#X connect 1 0 2 0;
#X connect 1 0 18 0;
#X connect 2 0 0 0;
#X connect 3 0 1 1;
#X connect 9 0 16 0;
#X connect 16 0 20 0;
#X connect 18 0 19 0;
#X connect 19 0 24 0;
#X connect 19 1 23 0;
#X connect 20 0 1 0;
#X connect 20 1 2 1;
#X connect 20 2 18 3;
#X connect 21 0 12 0;
#X connect 22 0 21 1;
#X connect 23 0 22 0;
#X connect 24 0 22 0;
